diff --git a/frontend/.env b/frontend/.env
index 095a4b14..9a29ca4c 100644
--- a/frontend/.env
+++ b/frontend/.env
@@ -1,14 +1,14 @@
-REACT_APP_OAUTH_HOST=http://localhost:9001
-REACT_APP_GATEWAY_HOST=http://localhost:8765
-REACT_APP_GATEWAY_WS_HOST=ws://localhost:8765
-REACT_APP_CLIENT_ID=front-client
-REACT_APP_REDIRECT_URI=http://localhost:3000/oauth/callback
+# REACT_APP_OAUTH_HOST=http://localhost:9001
+# REACT_APP_GATEWAY_HOST=http://localhost:8765
+# REACT_APP_GATEWAY_WS_HOST=ws://localhost:8765
+# REACT_APP_CLIENT_ID=front-client
+# REACT_APP_REDIRECT_URI=http://localhost:3000/oauth/callback
 
-# REACT_APP_OAUTH_HOST=http://192.168.1.6:9001
-# REACT_APP_GATEWAY_HOST=http://192.168.1.6:8765
-# REACT_APP_GATEWAY_WS_HOST=ws://192.168.1.6:8765
-# REACT_APP_CLIENT_ID=external-front-client
-# REACT_APP_REDIRECT_URI=http://192.168.1.6:3000/oauth/callback
+REACT_APP_OAUTH_HOST=http://192.168.1.6:9001
+REACT_APP_GATEWAY_HOST=http://192.168.1.6:8765
+REACT_APP_GATEWAY_WS_HOST=ws://192.168.1.6:8765
+REACT_APP_CLIENT_ID=external-front-client
+REACT_APP_REDIRECT_URI=http://192.168.1.6:3000/oauth/callback
 
 # REACT_APP_OAUTH_HOST=http://200.223.22.166:9001
 # REACT_APP_GATEWAY_HOST=http://200.223.22.166:8765
diff --git a/media-server/src/main/java/com/media/server/controllers/LoopVideoController.java b/media-server/src/main/java/com/media/server/controllers/LoopVideoController.java
index 9e6138e1..93caae85 100644
--- a/media-server/src/main/java/com/media/server/controllers/LoopVideoController.java
+++ b/media-server/src/main/java/com/media/server/controllers/LoopVideoController.java
@@ -42,7 +42,7 @@ public class LoopVideoController {
 	}
 
 	@GetMapping("/search/{loopUUID}/{fileName}")
-	public Mono<ResponseEntity<byte[]>> getVideo(@PathVariable String fileName, @PathVariable UUID loopUUID) {
+	public Mono<ResponseEntity<byte[]>> getVideo(@PathVariable("fileName") String fileName, @PathVariable("loopUUID") UUID loopUUID) {
 		return Mono.fromSupplier(() -> loopVideoService.getVideoByFileName(loopUUID, fileName));
 	}
 
diff --git a/oauth-ms/src/main/java/com/oauth/server/infra/security/SecurityConfiguration.java b/oauth-ms/src/main/java/com/oauth/server/infra/security/SecurityConfiguration.java
index 50638791..745be607 100644
--- a/oauth-ms/src/main/java/com/oauth/server/infra/security/SecurityConfiguration.java
+++ b/oauth-ms/src/main/java/com/oauth/server/infra/security/SecurityConfiguration.java
@@ -91,7 +91,7 @@ public class SecurityConfiguration {
 				.redirectUri("http://localhost:3000/oauth/callback")
 				.postLogoutRedirectUri("http://localhost:3000/oauth/logout").scope(OidcScopes.OPENID)
 				.scope(OidcScopes.PROFILE)
-				.clientSettings(ClientSettings.builder().requireAuthorizationConsent(true).build()).build();
+				.clientSettings(ClientSettings.builder().requireAuthorizationConsent(false).build()).build();
 
 		RegisteredClient externalOidcClient = RegisteredClient.withId(UUID.randomUUID().toString())
 				.clientId("external-front-client").clientSecret(passwordEncoder().encode("secret"))
@@ -104,7 +104,7 @@ public class SecurityConfiguration {
 				.redirectUri("http://192.168.1.6:3000/oauth/callback")
 				.postLogoutRedirectUri("http://192.168.1.6:3000/oauth/logout").scope(OidcScopes.OPENID)
 				.scope(OidcScopes.PROFILE)
-				.clientSettings(ClientSettings.builder().requireAuthorizationConsent(true).build()).build();
+				.clientSettings(ClientSettings.builder().requireAuthorizationConsent(false).build()).build();
 
 		RegisteredClient external2OidcClient = RegisteredClient.withId(UUID.randomUUID().toString())
 				.clientId("external-front-client-2").clientSecret(passwordEncoder().encode("secret"))
@@ -117,7 +117,7 @@ public class SecurityConfiguration {
 				.redirectUri("http://200.223.22.166:3000/oauth/callback")
 				.postLogoutRedirectUri("http://200.223.22.166:3000/oauth/logout").scope(OidcScopes.OPENID)
 				.scope(OidcScopes.PROFILE)
-				.clientSettings(ClientSettings.builder().requireAuthorizationConsent(true).build()).build();
+				.clientSettings(ClientSettings.builder().requireAuthorizationConsent(false).build()).build();
 
 		return new InMemoryRegisteredClientRepository(oidcClient, externalOidcClient, external2OidcClient);
 	}
diff --git a/oauth-ms/src/main/java/com/oauth/server/services/v1/impl/UserServiceImpl.java b/oauth-ms/src/main/java/com/oauth/server/services/v1/impl/UserServiceImpl.java
index 975e19ae..2db764be 100644
--- a/oauth-ms/src/main/java/com/oauth/server/services/v1/impl/UserServiceImpl.java
+++ b/oauth-ms/src/main/java/com/oauth/server/services/v1/impl/UserServiceImpl.java
@@ -46,6 +46,10 @@ public class UserServiceImpl implements UserDetailsService, UserService {
 		if (this.userExists(dto.username())) {
 			throw new RegistrationException("User already exists.");
 		}
+		System.out.println(dto.password() + "-" + dto.password2());
+		if (!dto.password().equals(dto.password2())) {
+			throw new RegistrationException("Password(1) and password(2) isn't the same.");
+		}
 		User user = User.Builder.of(dto.username()).setPassword(passwordEncoder.encode(dto.password()))
 				.setProfileFirstName(dto.profileFirstName()).setProfileLastName(dto.profileLastName()).build();
 		profileRep.save(user.getProfile());
